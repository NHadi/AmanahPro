// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/projects": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Update Project",
                "parameters": [
                    {
                        "description": "Project Data",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Project"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Create Project",
                "parameters": [
                    {
                        "description": "Project Data",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Project"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Search projects by organization ID and query string",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Search Projects",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search Query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ProjectDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a project by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Delete Project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.ProjectDTO": {
            "type": "object",
            "properties": {
                "CreatedAt": {
                    "type": "string"
                },
                "KeyUsers": {
                    "description": "Nested KeyUsers array",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ProjectUserDTO"
                    }
                },
                "Location": {
                    "type": "string"
                },
                "OrganizationID": {
                    "type": "integer"
                },
                "ProjectID": {
                    "type": "integer"
                },
                "ProjectName": {
                    "type": "string"
                },
                "Recap": {
                    "description": "Nested Recap object",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.ProjectRecapDTO"
                        }
                    ]
                },
                "Status": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "type": "string"
                }
            }
        },
        "dto.ProjectRecapDTO": {
            "type": "object",
            "properties": {
                "Margin": {
                    "type": "number"
                },
                "MarginPercentage": {
                    "type": "number"
                },
                "TotalOpname": {
                    "type": "number"
                },
                "TotalPengeluaran": {
                    "type": "number"
                }
            }
        },
        "dto.ProjectUserDTO": {
            "type": "object",
            "properties": {
                "Role": {
                    "type": "string"
                },
                "UserID": {
                    "type": "integer"
                }
            }
        },
        "models.Project": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "description": "Creation timestamp",
                    "type": "string"
                },
                "createdBy": {
                    "description": "Created by user ID",
                    "type": "integer"
                },
                "deletedAt": {
                    "description": "Deletion timestamp",
                    "type": "string"
                },
                "deletedBy": {
                    "description": "Deleted by user ID",
                    "type": "integer"
                },
                "description": {
                    "description": "Description of the project",
                    "type": "string"
                },
                "endDate": {
                    "description": "End date of the project",
                    "type": "string"
                },
                "location": {
                    "description": "Project location",
                    "type": "string"
                },
                "organizationID": {
                    "description": "Organization ID",
                    "type": "integer"
                },
                "projectID": {
                    "description": "Primary key",
                    "type": "integer"
                },
                "projectName": {
                    "description": "Name of the project",
                    "type": "string"
                },
                "startDate": {
                    "description": "Start date of the project",
                    "type": "string"
                },
                "status": {
                    "description": "Status of the project",
                    "type": "string"
                },
                "updatedAt": {
                    "description": "Update timestamp",
                    "type": "string"
                },
                "updatedBy": {
                    "description": "Updated by user ID",
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Provide your JWT token with \"Bearer \" prefix, e.g., \"Bearer \u003ctoken\u003e\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Project Management Services API",
	Description:      "This is the Project Management Services API documentation for managing project, and reconciliations.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
